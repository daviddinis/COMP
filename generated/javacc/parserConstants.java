/* Generated By:JJTree&JavaCC: Do not edit this line. parserConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface parserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int ADD = 6;
  /** RegularExpression Id. */
  int AND = 7;
  /** RegularExpression Id. */
  int BOOLEAN = 8;
  /** RegularExpression Id. */
  int CLASS = 9;
  /** RegularExpression Id. */
  int COMMA = 10;
  /** RegularExpression Id. */
  int DIV = 11;
  /** RegularExpression Id. */
  int DOT = 12;
  /** RegularExpression Id. */
  int ELSE = 13;
  /** RegularExpression Id. */
  int EQUALS = 14;
  /** RegularExpression Id. */
  int EXTENDS = 15;
  /** RegularExpression Id. */
  int FALSE = 16;
  /** RegularExpression Id. */
  int IF = 17;
  /** RegularExpression Id. */
  int IMPORT = 18;
  /** RegularExpression Id. */
  int INT = 19;
  /** RegularExpression Id. */
  int INTEGERLITERAL = 20;
  /** RegularExpression Id. */
  int LCURLY = 21;
  /** RegularExpression Id. */
  int LENGTH = 22;
  /** RegularExpression Id. */
  int LPAR = 23;
  /** RegularExpression Id. */
  int LSQUARE = 24;
  /** RegularExpression Id. */
  int MAIN = 25;
  /** RegularExpression Id. */
  int LESSTHAN = 26;
  /** RegularExpression Id. */
  int MUL = 27;
  /** RegularExpression Id. */
  int NEW = 28;
  /** RegularExpression Id. */
  int NOT = 29;
  /** RegularExpression Id. */
  int PUBLIC = 30;
  /** RegularExpression Id. */
  int RCURLY = 31;
  /** RegularExpression Id. */
  int RETURN = 32;
  /** RegularExpression Id. */
  int RPAR = 33;
  /** RegularExpression Id. */
  int RSQUARE = 34;
  /** RegularExpression Id. */
  int SEMICOLON = 35;
  /** RegularExpression Id. */
  int STATIC = 36;
  /** RegularExpression Id. */
  int STRING = 37;
  /** RegularExpression Id. */
  int SUB = 38;
  /** RegularExpression Id. */
  int THIS = 39;
  /** RegularExpression Id. */
  int TRUE = 40;
  /** RegularExpression Id. */
  int VOID = 41;
  /** RegularExpression Id. */
  int WHILE = 42;
  /** RegularExpression Id. */
  int IDENTIFIER = 43;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\r\"",
    "<token of kind 4>",
    "<token of kind 5>",
    "\"+\"",
    "\"&&\"",
    "\"boolean\"",
    "\"class\"",
    "\",\"",
    "\"/\"",
    "\".\"",
    "\"else\"",
    "\"=\"",
    "\"extends\"",
    "\"false\"",
    "\"if\"",
    "\"import\"",
    "\"int\"",
    "<INTEGERLITERAL>",
    "\"{\"",
    "\"length\"",
    "\"(\"",
    "\"[\"",
    "\"main\"",
    "\"<\"",
    "\"*\"",
    "\"new\"",
    "\"!\"",
    "\"public\"",
    "\"}\"",
    "\"return\"",
    "\")\"",
    "\"]\"",
    "\";\"",
    "\"static\"",
    "\"String\"",
    "\"-\"",
    "\"this\"",
    "\"true\"",
    "\"void\"",
    "\"while\"",
    "<IDENTIFIER>",
  };

}

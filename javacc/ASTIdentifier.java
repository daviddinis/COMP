
/* Generated By:JJTree: Do not edit this line. ASTIdentifier.java Version 6.1 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
public
class ASTIdentifier extends SimpleNode implements ASTType{
  public ASTIdentifier(int id) {
    super(id);
  }

  public ASTIdentifier(Parser p, int id) {
    super(p, id);
  }

  public String getType(){
    return "" + jjtGetValue();
  }

  public String getName(){
    return "" + jjtGetValue();
  }

  public String analyzeType(SymbolTable table) {
    analyzeSemantics(table);
    Symbol id = table.getSymbol(getName());
    if (id == null) {
      return "";
    }
    return id.getType();
  }

  public void analyzeSemantics(SymbolTable symbolTable){
    if (symbolTable.getSymbol(getName()) == null) {
      System.err.println("variable " + getName() + " in line " + getLine() +" is not declared");
    }
  }

  public void initialize(SymbolTable table) {
    Symbol id = table.getSymbol(getName());
    if (id != null) {
      id.initialize();
    }
  }

  public boolean isInitialized(SymbolTable table) {
    Symbol id = table.getSymbol(getName());
    if (id != null) {
      return id.isInitialized();
    }
    return false;
  }
}
/* JavaCC - OriginalChecksum=75abfe948da46b0c7b3a59b2cae3a666 (do not edit this line) */

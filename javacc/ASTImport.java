/* Generated By:JJTree: Do not edit this line. ASTImport.java Version 6.1 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
public class ASTImport extends SimpleNode {

  public boolean isStatic;

  public ASTImport(int id) {
    super(id);
    isStatic = false;
  }

  public ASTImport(Parser p, int id) {
    super(p, id);
    isStatic = false;
  }

  public void createSymbolTable(SymbolTable symbolTable) {

    if (children != null && children.length > 3) {

      SymbolTable newTable = new SymbolTable(symbolTable);
      String methodName = new String();
      int i = 1;
      if (isStatic) {
        methodName += "static";
        i = 2;
      }

      for (; i < children.length; i++) {

          if(children[i] instanceof AST)
          methodName += ((ASTType) ((ASTArgument) children[i]).children[0]).getType();
      }

      methodName += ")";
      parser.addMethod(methodName, newTable);

      for (int i = 0; i < children.length; i++) {
        ((SimpleNode) children[i]).createSymbolTable(newTable);
      }
    }
  }

}
/*
 * JavaCC - OriginalChecksum=102b8623e78d8554f34992788a15d8e1 (do not edit this
 * line)
 */

/* Generated By:JJTree: Do not edit this line. ASTIntLiteral.java Version 6.1 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
import java.io.*;
public
class ASTIntLiteral extends SimpleNode {
  public ASTIntLiteral(int id) {
    super(id);
  }

  public ASTIntLiteral(Parser p, int id) {
    super(p, id);
  }

  public String analyzeType(SymbolTable table) {
    return "Int";
  }

  public boolean isInitialized(SymbolTable table) {
    return true;
  }

  public int generateCode(SymbolTable table, PrintWriter print){

      int value;
        
      try{
        value = (int)(this.value);
        if(value >= 0 && value <= 5)
          print.println("\ticonst_" + this.value);
		    else if(value == -1)
          print.println("\ticonst_m1 " + this.value);
		    else if(value >= -128 && value <= 127)
          print.println("\tbipush " + this.value);
		    else if(value >= -32768 && value <= 32767)
          print.println("\tsipush " + this.value);
        else
          print.println("\tldc " + this.value);
      }catch(Exception e){
          print.println("\tldc " + this.value);
      }

      return 1;
  }

}

/* JavaCC - OriginalChecksum=3cbf5a57c95087c442314130215558ea (do not edit this line) */

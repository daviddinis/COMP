/* Generated By:JJTree: Do not edit this line. ASTMethod.java Version 6.1 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
public
class ASTMethod extends SimpleNode {
  public ASTMethod(int id) {
    super(id);
  }

  public ASTMethod(Parser p, int id) {
    super(p, id);
  }

  public void createSymbolTable(SymbolTable symbolTable) {
    SymbolTable newTable = new SymbolTable(symbolTable);

    String methodName = ((SimpleNode)children[1]).name + "(";

        for (int i = 0; i < children.length; i++) {
            if (children[i] instanceof ASTArgument) {
                methodName += ((ASTType)((ASTArgument)children[i]).children[0]).getType();
            }
        }

        methodName += ")";

    parser.addMethod(methodName, newTable);


    if (children == null) return;

    for (int i = 0; i < children.length; i++) {
      ((SimpleNode) children[i]).createSymbolTable(newTable);
    }
  }


}
/* JavaCC - OriginalChecksum=e01bdf01dd9e8aa606ef225a59a26df3 (do not edit this line) */

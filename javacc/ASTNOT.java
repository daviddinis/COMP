/* Generated By:JJTree: Do not edit this line. ASTNOT.java Version 6.1 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=false,NODE_PREFIX=AST,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
import java.io.*;

public
class ASTNOT extends SimpleNode {
  public ASTNOT(int id) {
    super(id);
  }

  public ASTNOT(Parser p, int id) {
    super(p, id);
  }

  public String analyzeType(SymbolTable table) {
    if (((SimpleNode) children[0]).analyzeType(table).equals("Bool")) {
      return "Bool";
    }
    return "";
  }

  public boolean isInitialized(SymbolTable table) {
    return ((SimpleNode) children[0]).isInitialized(table);
  }

  public int generateCode(SymbolTable symbolTable, PrintWriter print){
    // TODO CP4 XOR/ineg instead if
    SimpleNode expression = ((SimpleNode) children[0]);
    String label_else = "else_" + getLine() + getColumn(); 
    String label_endif = "endif_" + getLine() + getColumn(); 

    int stackSize = expression.generateCode(symbolTable, print);
    print.println("\tifeq " + label_else);
    print.println("iconst_0");
    print.println("goto " + label_endif);
    print.println(label_else + ":");
    print.println("iconst_1");
    print.println(label_endif+ ":");
    return stackSize;
  }
}
/* JavaCC - OriginalChecksum=16d53ed9e35a62bfcfc2dfb414cfb54a (do not edit this line) */
